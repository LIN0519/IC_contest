`timescale 1ns/10ps
/*
 * IC Contest Computational System (CS)
*/
module CS(Y, X, reset, clk);

input clk, reset; 
input [7:0] X;
output reg[9:0] Y;
reg   [9:0] output_buffer;
reg  [7:0] data [8:0];
reg  [3:0] i;
reg  [3:0]  store_index;
wire  [11:0] sum;
assign sum = data[0] + data[1] +  data[2] + data[3] + data[4] + data[5] + data[6] + data[7] + data[8];
reg  [7:0] Xavg;
reg  [7:0] Xappr;

          
always@(posedge clk , posedge reset)begin
 if(reset)begin
  store_index <= 0;
  Y <= 0;
 end
 else begin
    data[store_index] <= X;
    store_index <= store_index + 1;
        if(store_index == 8)
           store_index <= 0;
   end
end

always@(*)begin
     Xappr = 0;
     Xavg  = sum/9;  
     for(i =0;i<9;i = i + 1)begin
         if((data[i] <= Xavg )&&( data[i] > Xappr ))begin
               Xappr = data[i];
             end
        end
      Y = (Xappr *9 + sum)/8;
  end

always@(negedge clk)begin  
    
end 
endmodule

